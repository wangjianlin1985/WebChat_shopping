<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.PayWayMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加支付方式记录 -->
	<insert id="addPayWay" parameterType="payWay">
		insert into t_payWay(payWayName) values 
		(#{payWayName})
	</insert>

	<!-- 按照查询条件分页查询支付方式记录 -->
	<select id="queryPayWay" resultMap="payWayMap" >
		select t_payWay.* from t_payWay ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="payWayMap" type="payWay">
        <id property="payWayId" column="payWayId" />
    </resultMap>

    <!-- 按照查询条件查询所有支付方式记录 -->
	<select id="queryPayWayList" resultMap="payWayMap" >
		select t_payWay.* from t_payWay ${where}
	</select>

    <!-- 按照查询条件的支付方式记录数 -->
	<select id="queryPayWayCount" resultType="int">
		select count(*) from t_payWay ${where}
	</select>

	<!-- 根据主键查询某个支付方式记录 -->
	<select id="getPayWay" parameterType="int" resultMap="payWayMap">
		select * from t_payWay where t_payWay.payWayId = #{payWayId}
	</select>

	<!-- 更新支付方式记录 -->
	<update id="updatePayWay" parameterType="payWay">
		update t_payWay set payWayName=#{payWayName} where payWayId = #{payWayId}
	</update>

	<!-- 删除支付方式记录 -->
	<delete id="deletePayWay" parameterType="int">
		delete from t_payWay where payWayId=#{payWayId}
	</delete>

</mapper>
